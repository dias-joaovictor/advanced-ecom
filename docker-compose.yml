services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"  # External access port (for the host IP)
      - "29092:29092"  # Internal Docker network access port
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      # Bind Kafka to all interfaces on port 29092 for internal Docker network communication
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092

      # Advertise both internal (Docker) and external (Host) listeners with unique names
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:29092,EXTERNAL://${LOCAL_IP}:9092

      # Map listener names to security protocols
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT

      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  pfs-mysql:
    image: mysql:8
    ports:
      - "13306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=pfs
      - MYSQL_USER=pfs
      - MYSQL_PASSWORD=pfs
    healthcheck:
      test: [
        "CMD-SHELL",
        "mysql -u$${MYSQL_USER} -p$${MYSQL_PASSWORD} -D$${MYSQL_DATABASE} -e 'SELECT 1;'"
      ]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

  sfs-mysql:
    image: mysql:8
    ports:
      - "23306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=sfs
      - MYSQL_USER=sfs
      - MYSQL_PASSWORD=sfs
    healthcheck:
      test: [
        "CMD-SHELL",
        "mysql -u$${MYSQL_USER} -p$${MYSQL_PASSWORD} -D$${MYSQL_DATABASE} -e 'SELECT 1;'"
      ]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

  cs-mysql:
    image: mysql:8
    ports:
      - "33306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=cs
      - MYSQL_USER=cs
      - MYSQL_PASSWORD=cs
    healthcheck:
      test: [
        "CMD-SHELL",
        "mysql -u$${MYSQL_USER} -p$${MYSQL_PASSWORD} -D$${MYSQL_DATABASE} -e 'SELECT 1;'"
      ]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

  os-mysql:
    image: mysql:8
    ports:
      - "43306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=os
      - MYSQL_USER=os
      - MYSQL_PASSWORD=os
    healthcheck:
      test: [
        "CMD-SHELL",
        "mysql -u$${MYSQL_USER} -p$${MYSQL_PASSWORD} -D$${MYSQL_DATABASE} -e 'SELECT 1;'"
      ]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55

  pfs:
    build:
      context: product-feed-service
      dockerfile: Dockerfile

    ports:
      - "8080:8080"
    image: product-feed-service:latest
    depends_on:
      pfs-mysql:
        condition: service_healthy
    environment:
      - DATASOURCE_URL=jdbc:mysql://pfs-mysql:3306/pfs
      - DATASOURCE_USERNAME=pfs
      - DATASOURCE_PASSWORD=pfs
      - KAFKA_BROKER_LIST=kafka:29092